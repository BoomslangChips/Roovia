@page "/Account/ResendEmailConfirmation"

@using System.ComponentModel.DataAnnotations
@using System.Text
@using System.Text.Encodings.Web
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using Roovia.Data
@using Roovia.Components.Layout

@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager
@layout BlankLayout

<PageTitle>Resend Email Confirmation - Roovia</PageTitle>

<div class="auth-page">
    <div class="auth-container">
        <div class="auth-header">
            <img src="/images/roovia-logo.png" alt="Roovia Logo" class="auth-logo">
            <h1>Resend Email Confirmation</h1>
            <h2>Please enter your email address to receive a new confirmation link</h2>
        </div>

        @if (!string.IsNullOrEmpty(message))
        {
            <div class="auth-alert auth-alert-success">
                <i class="fal fa-check-circle"></i>
                <div class="auth-alert-content">
                    <h3>Success!</h3>
                    <p>@message</p>
                </div>
            </div>
        }

        <EditForm Model="Input" FormName="resend-email-confirmation" OnValidSubmit="OnValidSubmitAsync" method="post" class="auth-form">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert" />

            <div class="form-group">
                <label for="Input.Email" class="form-label">Email Address</label>
                <div class="input-with-icon">
                    <i class="fal fa-envelope"></i>
                    <InputText @bind-Value="Input.Email" id="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                </div>
                <ValidationMessage For="() => Input.Email" class="text-danger" />
            </div>

            <button type="submit" class="auth-button">
                <span>Resend Confirmation Email</span>
                <i class="fal fa-paper-plane"></i>
            </button>
        </EditForm>

        <div class="auth-footer">
            <p>Remember your password?</p>
            <a href="Account/Login" class="auth-link">Back to login</a>
        </div>
    </div>
</div>

@code {
    private string? message;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    private async Task OnValidSubmitAsync()
    {
        var user = await UserManager.FindByEmailAsync(Input.Email!);
        if (user is null)
        {
            message = "Verification email sent. Please check your email.";
            return;
        }

        var userId = await UserManager.GetUserIdAsync(user);
        var code = await UserManager.GenerateEmailConfirmationTokenAsync(user);
        code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
        var callbackUrl = NavigationManager.GetUriWithQueryParameters(
            NavigationManager.ToAbsoluteUri("Account/ConfirmEmail").AbsoluteUri,
            new Dictionary<string, object?> { ["userId"] = userId, ["code"] = code });
        await EmailSender.SendConfirmationLinkAsync(user, Input.Email, HtmlEncoder.Default.Encode(callbackUrl));

        message = "Verification email sent. Please check your email.";
    }

    private sealed class InputModel
    {
        [Required(ErrorMessage = "Email address is required.")]
        [EmailAddress(ErrorMessage = "Invalid email format.")]
        public string Email { get; set; } = "";
    }
}
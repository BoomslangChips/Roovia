@* RVTab.razor - Enhanced Mobile Responsiveness *@
<div class="roovia-tabs-container @(IsVertical ? "roovia-tabs-container-vertical" : "") @CssClass">
    <div class="roovia-tabs @StyleClass">
        @foreach (var tab in Tabs)
        {
            <button type="button"
                    class="roovia-tab @(tab.IsActive ? "active" : "")"
                    @onclick="() => SelectTab(tab.Id)"
                    disabled="@(Disabled || tab.Disabled)">
                @if (!string.IsNullOrEmpty(tab.Icon))
                {
                    <i class="@tab.Icon"></i>
                }
                <span class="tab-title">@tab.Title</span>
                @if (tab.BadgeCount > 0)
                {
                    <span class="roovia-tab-badge">@(tab.BadgeCount > 99 ? "99+" : tab.BadgeCount.ToString())</span>
                }
            </button>
        }
    </div>
    <div class="roovia-tab-content">
        @ChildContent
    </div>
</div>

<style>
    /* Component-specific styles building on the core CSS variables */
    /* Base Tab Container */
    .roovia-tabs-container {
        display: flex;
        flex-direction: column;
        width: 100%;
    }

    /* Tab Navigation Styles */
    .roovia-tabs {
        display: flex;
        overflow-x: auto;
        scrollbar-width: none; /* Firefox */
        -ms-overflow-style: none; /* IE/Edge */
        margin-bottom: var(--spacing-4);
        border-bottom: 1px solid var(--border-divider);
        -webkit-overflow-scrolling: touch; /* Enhanced touch scrolling */
        scroll-snap-type: x mandatory; /* Create snap points for better scroll experience */
    }

        .roovia-tabs::-webkit-scrollbar {
            display: none; /* Chrome/Safari/Opera */
        }

    .roovia-tab {
        padding: var(--spacing-3) var(--spacing-4);
        white-space: nowrap;
        color: var(--text-secondary);
        font-weight: 500;
        position: relative;
        cursor: pointer;
        border: none;
        background: transparent;
        transition: var(--hover-transition);
        font-size: var(--font-size-base);
        display: flex;
        align-items: center;
        justify-content: center;
        gap: var(--spacing-2);
        min-height: 44px; /* Ensure touch-friendly size */
        scroll-snap-align: start; /* Create snap points for better scroll experience */
    }

        .roovia-tab:hover {
            color: var(--primary);
        }

        .roovia-tab.active {
            color: var(--primary);
        }

            .roovia-tab.active::after {
                content: '';
                position: absolute;
                bottom: -1px;
                left: 0;
                width: 100%;
                height: 2px;
                background-color: var(--primary);
                border-top-left-radius: 3px;
                border-top-right-radius: 3px;
            }

        .roovia-tab i {
            font-size: 1.125rem;
        }

    .roovia-tab-badge {
        display: inline-flex;
        justify-content: center;
        align-items: center;
        min-width: 18px;
        height: 18px;
        border-radius: var(--border-radius-pill);
        background-color: var(--primary-light);
        color: var(--primary);
        font-size: 0.75rem;
        font-weight: 600;
        padding: 0 var(--spacing-1);
        transition: var(--hover-transition);
        margin-left: var(--spacing-2);
    }

    .roovia-tab:hover .roovia-tab-badge,
    .roovia-tab.active .roovia-tab-badge {
        background-color: var(--primary);
        color: white;
    }

    /* Tab Content Styles */
    .roovia-tab-content {
        position: relative;
        width: 100%;
    }

    .roovia-tab-panel {
        display: none;
        animation: roovia-fade-in 0.3s ease-in-out;
    }

        .roovia-tab-panel.active {
            display: block;
        }

    @@keyframes roovia-fade-in {
        from

    {
        opacity: 0;
        transform: translateY(10px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }

    }

    /* Tab Variations */
    /* Boxed Tabs */
    .roovia-tabs-boxed {
        border: none;
        gap: var(--spacing-2);
        padding: var(--spacing-1);
        background-color: var(--subtle-bg);
        border-radius: var(--border-radius-md);
    }

        .roovia-tabs-boxed .roovia-tab {
            border-radius: var(--border-radius-md);
            border: 1px solid transparent;
            padding: var(--spacing-2) var(--spacing-4);
        }

            .roovia-tabs-boxed .roovia-tab:hover {
                background-color: var(--primary-light);
            }

            .roovia-tabs-boxed .roovia-tab.active {
                background-color: var(--primary-light);
                border-color: var(--primary);
                box-shadow: 0 2px 5px rgba(var(--primary-rgb), 0.15); /* Subtle lift effect */
            }

                .roovia-tabs-boxed .roovia-tab.active::after {
                    content: none;
                }

    /* Button-Style Tabs */
    .roovia-tabs-buttons {
        background-color: var(--subtle-bg);
        padding: var(--spacing-2);
        border-radius: var(--border-radius-lg);
        border: 1px solid var(--border-divider);
        gap: var(--spacing-2);
    }

        .roovia-tabs-buttons .roovia-tab {
            border-radius: var(--border-radius-md);
            padding: var(--spacing-2) var(--spacing-3);
        }

            .roovia-tabs-buttons .roovia-tab:hover {
                background-color: var(--border-light);
            }

            .roovia-tabs-buttons .roovia-tab.active {
                background-color: var(--primary);
                color: white;
            }

                .roovia-tabs-buttons .roovia-tab.active::after {
                    content: none;
                }

                .roovia-tabs-buttons .roovia-tab.active .roovia-tab-badge {
                    background-color: white;
                    color: var(--primary);
                }

    /* Pills Tabs */
    .roovia-tabs-pills {
        border: none;
        gap: var(--spacing-2);
    }

        .roovia-tabs-pills .roovia-tab {
            border-radius: var(--border-radius-pill);
            padding: var(--spacing-2) var(--spacing-4);
        }

            .roovia-tabs-pills .roovia-tab:hover {
                background-color: var(--primary-light);
            }

            .roovia-tabs-pills .roovia-tab.active {
                background-color: var(--primary);
                color: white;
            }

                .roovia-tabs-pills .roovia-tab.active::after {
                    content: none;
                }

                .roovia-tabs-pills .roovia-tab.active .roovia-tab-badge {
                    background-color: white;
                    color: var(--primary);
                }

    /* Vertical Tabs */
    .roovia-tabs-container-vertical {
        display: flex;
        flex-direction: row;
        gap: var(--spacing-4);
    }

    .roovia-tabs-vertical {
        display: flex;
        flex-direction: column;
        border-bottom: none;
        border-right: 1px solid var(--border-divider);
        min-width: 200px;
        margin-bottom: 0;
    }

        .roovia-tabs-vertical .roovia-tab {
            text-align: left;
            padding: var(--spacing-3) var(--spacing-4);
            border-right: 2px solid transparent;
            justify-content: flex-start;
        }

            .roovia-tabs-vertical .roovia-tab.active::after {
                content: none;
            }

            .roovia-tabs-vertical .roovia-tab.active {
                border-right-color: var(--primary);
            }

    /* Tab Sizes */
    .roovia-tabs-sm .roovia-tab {
        padding: var(--spacing-2) var(--spacing-3);
        font-size: var(--font-size-sm);
        min-height: 36px;
    }

        .roovia-tabs-sm .roovia-tab i {
            font-size: 1rem;
        }

    .roovia-tabs-lg .roovia-tab {
        padding: var(--spacing-3) var(--spacing-5);
        font-size: var(--font-size-lg);
        min-height: 52px;
    }

        .roovia-tabs-lg .roovia-tab i {
            font-size: 1.25rem;
        }

    /* Responsive Adjustments */
    @@media (max-width: 768px) {
        .roovia-tabs-container-vertical

    {
        flex-direction: column;
    }

    .roovia-tabs-vertical {
        flex-direction: row;
        overflow-x: auto;
        border-right: none;
        border-bottom: 1px solid var(--border-divider);
        min-width: 0;
        margin-bottom: var(--spacing-4);
    }

        .roovia-tabs-vertical .roovia-tab {
            border-right: none;
            justify-content: center;
        }

            .roovia-tabs-vertical .roovia-tab.active {
                border-right-color: transparent;
            }

                .roovia-tabs-vertical .roovia-tab.active::after {
                    content: '';
                    position: absolute;
                    bottom: -1px;
                    left: 0;
                    width: 100%;
                    height: 2px;
                    background-color: var(--primary);
                }

    .roovia-tabs {
        margin-bottom: var(--spacing-3);
    }

    }

    @@media (max-width: 576px) {
        .roovia-tabs .roovia-tab

    {
        padding: var(--spacing-2) var(--spacing-2);
        font-size: var(--font-size-sm);
        gap: var(--spacing-1);
    }

    .roovia-tabs-boxed .roovia-tab,
    .roovia-tabs-buttons .roovia-tab,
    .roovia-tabs-pills .roovia-tab {
        padding: var(--spacing-1) var(--spacing-2);
    }

    .roovia-tabs-buttons,
    .roovia-tabs-pills,
    .roovia-tabs-boxed {
        flex-wrap: nowrap;
        overflow-x: auto;
        padding: var(--spacing-1);
        gap: var(--spacing-1);
    }

    .roovia-tab i {
        font-size: var(--font-size-base);
    }

    .roovia-tabs {
        margin-bottom: var(--spacing-2);
    }

        .roovia-tab .tab-title {
            display: none;
        }

        .roovia-tab.active .tab-title {
            display: inline;
            font-size: 12px;
        }
    }

    /* Enhanced mobile optimization for very small screens */
    @@media (max-width: 400px) {
        .roovia-tabs

    {
        justify-content: space-between;
        overflow-x: auto;
        margin-bottom: var(--spacing-2);
    }

    .roovia-tabs-boxed {
        padding: var(--spacing-1) var(--spacing-1);
    }

    .roovia-tab {
        flex: 1;
        padding: var(--spacing-1) var(--spacing-1);
        min-width: auto;
        font-size: var(--font-size-xs);
    }

    .roovia-tabs-boxed .roovia-tab {
        border-radius: var(--border-radius-sm);
        padding: var(--spacing-1) var(--spacing-1);
    }

    /* Hide text on very small screens, show only icons */
    .roovia-tab .tab-title {
        display: none;
    }

    .roovia-tab.active .tab-title {
        display: none;
        font-size: 12px;
    }

    .roovia-tab i {
        font-size: var(--font-size-base);
    }

    .roovia-tab-badge {
        min-width: 14px;
        height: 14px;
        font-size: 9px;
        margin-left: 2px;
    }

    /* Equal width tabs for icon-only mode */
    .roovia-tabs-boxed .roovia-tab,
    .roovia-tabs-buttons .roovia-tab,
    .roovia-tabs-pills .roovia-tab {
        min-width: 0;
        flex: 1;
        padding: 8px 0;
    }

    }
</style>

@code {
    [Parameter] public RenderFragment ChildContent { get; set; }
    [Parameter] public List<RVTabItem> Tabs { get; set; } = new List<RVTabItem>();
    [Parameter] public bool IsVertical { get; set; }
    [Parameter] public string Style { get; set; } = "underlined";
    [Parameter] public string Size { get; set; } = "md";
    [Parameter] public bool Disabled { get; set; }
    [Parameter] public string CssClass { get; set; }
    [Parameter] public EventCallback<string> OnTabChange { get; set; }

    private string StyleClass => $"roovia-tabs-{Style.ToLowerInvariant()} roovia-tabs-{Size.ToLowerInvariant()} {(IsVertical ? "roovia-tabs-vertical" : "")}";

    protected override void OnInitialized()
    {
        // Set the first tab as active if none are active
        if (Tabs.Count > 0 && !Tabs.Any(t => t.IsActive))
        {
            Tabs[0].IsActive = true;
        }
    }

    private async Task SelectTab(string tabId)
    {
        if (Disabled)
            return;

        var selectedTab = Tabs.FirstOrDefault(t => t.Id == tabId);
        if (selectedTab != null && !selectedTab.Disabled)
        {
            foreach (var tab in Tabs)
            {
                tab.IsActive = (tab.Id == tabId);
            }

            await OnTabChange.InvokeAsync(tabId);
            StateHasChanged();
        }
    }

    public class RVTabItem
    {
        public string Id { get; set; } = Guid.NewGuid().ToString();
        public string Title { get; set; }
        public string Icon { get; set; }
        public bool IsActive { get; set; }
        public bool Disabled { get; set; }
        public int BadgeCount { get; set; }
    }
}
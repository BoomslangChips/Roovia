@page"/beneficiaries"

<h3>Beneficiaries</h3>

<div class="container my-4">
    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white">
            Beneficiaries Overview
        </div>
        <div class="card-body">
            <div class="mb-3">
                <input type="text" placeholder="Search beneficiaries..." class="form-control" @bind="searchTerm" />
            </div>
            @if (FilteredBeneficiaries.Any())
            {
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>First Name</th>
                            <th>Last Name</th>
                            <th>ID Number</th>
                            <th>VAT Number</th>
                            <th>Email Address</th>
                            <th>Contact Number</th>
                            <th>Notifications</th>
                            <th>Status</th>
                            <th>Date Added</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var beneficiary in FilteredBeneficiaries)
                        {
                            <tr>
                                <td>@beneficiary.FirstName</td>
                                <td>@beneficiary.LastName</td>
                                <td>@beneficiary.IdNumber</td>
                                <td>@beneficiary.VatNumber</td>
                                <td>@beneficiary.EmailAddress</td>
                                <td>@beneficiary.ContactNumber</td>
                                <td>@(beneficiary.IsNotificationsEnabled ? "Enabled" : "Disabled")</td>
                                <td>@(beneficiary.IsActive ? "Active" : "Inactive")</td>
                                <td>@beneficiary.DateAdded.ToShortDateString()</td>
                                <td>
                                    <button class="btn roovia-btn btn-sm me-2" @onclick="() => ViewBeneficiary(beneficiary)">
                                        <i class="bi bi-eye"></i> View
                                    </button>
                                    <button class="btn roovia-btn btn-sm me-2" @onclick="() => EditBeneficiary(beneficiary)">
                                        <i class="bi bi-pencil"></i> Edit
                                    </button>
                                    <button class="btn roovia-btn btn-sm" @onclick="() => DeleteBeneficiary(beneficiary)">
                                        <i class="bi bi-trash"></i> Delete
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <div class="alert alert-info">
                    No beneficiaries available.
                </div>
            }
        </div>
    </div>
</div>

@code {
    private string searchTerm = string.Empty;

    public class Beneficiary
    {
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string IdNumber { get; set; }
        public string VatNumber { get; set; }
        public string EmailAddress { get; set; }
        public string ContactNumber { get; set; }
        public bool IsNotificationsEnabled { get; set; }
        public bool IsActive { get; set; }
        public DateTime DateAdded { get; set; }
    }

    private List<Beneficiary> beneficiaries = new List<Beneficiary>();

    protected override void OnInitialized()
    {
        // Simulated beneficiaries data
        beneficiaries = new List<Beneficiary>
        {
            new Beneficiary
            {
                FirstName = "John",
                LastName = "Doe",
                IdNumber = "123456789",
                VatNumber = "VAT12345",
                EmailAddress = "john.doe@example.com",
                ContactNumber = "123-456-7890",
                IsNotificationsEnabled = true,
                IsActive = true,
                DateAdded = DateTime.Now.AddDays(-10)
            },
            new Beneficiary
            {
                FirstName = "Jane",
                LastName = "Smith",
                IdNumber = "987654321",
                VatNumber = "VAT54321",
                EmailAddress = "jane.smith@example.com",
                ContactNumber = "987-654-3210",
                IsNotificationsEnabled = false,
                IsActive = false,
                DateAdded = DateTime.Now.AddDays(-20)
            }
        };
    }

    private IEnumerable<Beneficiary> FilteredBeneficiaries =>
        beneficiaries.Where(b => string.IsNullOrEmpty(searchTerm) || 
                                 b.FirstName.Contains(searchTerm, StringComparison.OrdinalIgnoreCase) || 
                                 b.LastName.Contains(searchTerm, StringComparison.OrdinalIgnoreCase));

    private void ViewBeneficiary(Beneficiary beneficiary)
    {
        // Logic to view beneficiary details
        Console.WriteLine($"Viewing beneficiary: {beneficiary.FirstName} {beneficiary.LastName}");
    }

    private void EditBeneficiary(Beneficiary beneficiary)
    {
        // Logic to edit beneficiary
        Console.WriteLine($"Editing beneficiary: {beneficiary.FirstName} {beneficiary.LastName}");
    }

    private void DeleteBeneficiary(Beneficiary beneficiary)
    {
        // Logic to delete beneficiary
        beneficiaries.Remove(beneficiary);
        Console.WriteLine($"Deleted beneficiary: {beneficiary.FirstName} {beneficiary.LastName}");
    }
}
